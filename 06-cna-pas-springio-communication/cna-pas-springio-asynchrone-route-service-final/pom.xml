<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.thinkenterprise</groupId>
	<artifactId>cna-pas-springio-asynchrone-route-service-final</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>9</maven.compiler.source>
		<maven.compiler.target>9</maven.compiler.target>
		<java.version>9</java.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.7.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2021.0.4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.11</version>
		</dependency>
	</dependencies>


	<profiles>
		<!-- Product Profiles -->
		<!-- Using Netflix Eureka a Discovery Client. Define a additional profile 
			for other products like Consul, or Zookeeper etc. -->
		<profile>
			<id>rabbit</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-stream-rabbit</artifactId>
				</dependency>
			</dependencies>
		</profile>


		<profile>
			<id>kafka</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-stream-kafka</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<!-- Using Netflix Eureka a Discovery Client. Define a additional profile 
			for other products like Consul, or Zookeeper etc. -->
		<profile>
			<id>eureka</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<!-- Using Spring Cloud Loadbalancer implementation. Define a additional profile for Netlix 
			Loadbalancer or other products etc. -->
		<profile>
			<id>loadbalancer</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-loadbalancer</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<!-- Using Spring Cloud Resilience4J implementation. Define a additional profile for Netlix 
			Hystrixs or other products etc. -->
		<profile>
			<id>resilience4j</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<!-- Using MySQL as Database Driver -->
		<profile>
			<id>mysql</id>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
		</profile>

		<!-- Cloud Profiles -->
		<!-- Using Pivotal Cloud Foundry as Cloud Environment -->
		<profile>
			<id>pcf</id>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.pivotal.spring.cloud</groupId>
						<artifactId>spring-cloud-services-dependencies</artifactId>
						<version>3.5.0</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<!-- Using Netflix Eureka a Discovery Client which is connected with the 
				managed service from PCF -->
			<dependencies>
				<dependency>
					<groupId>io.pivotal.spring.cloud</groupId>
					<artifactId>spring-cloud-services-starter-service-registry</artifactId>
				</dependency>
			</dependencies>
		</profile>
	</profiles>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-repo</id>
			<name>Spring Repository</name>
			<url>http://repo.spring.io/release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>