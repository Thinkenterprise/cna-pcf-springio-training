# Default Stage Setting for Development 
server:
  port: 8081

spring:
  application:
    name: flightService   
  profiles:
    active:
    - mysql
    - eureka
    - loadbalancer
    - resilience4j
    - kafka
    
  jpa:
    defer-datasource-initialization: true # Create JPA-Schema before(!) loading SQL scripts (override new behaviour of Spring-Boot 2.5)
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: create-drop   
    
## Actuator Settings 
management:
  endpoints: 
    enabled-by-default: true
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

## Open API Settings     
springdoc:
  api-docs:
    enabled: true
    path: /oas/v3/spec
  packagesToScan: com.thinkenterprise.flight.api
  swagger-ui:
    path: /oas/v3/ui

# Product Stage Setting 

# Rabbit MQ
---
spring:
  config: 
    activate:
      on-profile: rabbit, kafak
  cloud:
    stream:
      bindings:
        input:
          contentType: application/json
          destination: EntityChangedCommand
          group: Command

# MySQL Database Settings 
---
spring:
  config: 
    activate:
      on-profile: mysql       
  sql:
    init:
      platform: mysql
      mode: always
  datasource:
    url: jdbc:mysql://localhost:3306/aircraft
    username: thinkenterprise
    password: thinkenterprise20!
    driver-class-name: com.mysql.cj.jdbc.Driver      
        
 
# Eureka Client Settings 
---
spring:
  config: 
    activate:
      on-profile: eureka
      
eureka:
  client:
    serviceUrl: 
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5 
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

# Loadbalancer Settings 
---
spring:
  config: 
    activate:
      on-profile: loadbalancer 
  cloud:
    loadbalancer:
      retry:
        enabled: true




